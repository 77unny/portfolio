{"version":3,"sources":["store/modal/index.ts","component/atoms/button/style.ts","component/atoms/button/index.tsx","constants/index.ts","component/atoms/timer/style.ts","component/atoms/timer/index.tsx","component/molecules/history/chart/item/style.ts","component/molecules/history/chart/item/index.tsx","component/molecules/history/chart/style.ts","component/molecules/history/chart/index.tsx","component/molecules/history/style.ts","component/molecules/history/index.tsx","store/quiz/index.ts","store/quiz/selectors.ts","component/atoms/infoMessage/style.ts","component/atoms/infoMessage/index.tsx","component/atoms/radioButton/style.ts","component/atoms/radioButton/index.tsx","component/molecules/difficulty/style.ts","component/molecules/difficulty/index.tsx","component/organisms/intro/style.ts","component/organisms/intro/index.tsx","hooks/useRequest.ts","component/molecules/answer/style.ts","component/molecules/answer/index.tsx","utils/index.ts","component/organisms/quiz/style.ts","component/organisms/quiz/index.tsx","store/modal/selector.ts","style/index.ts","App.tsx","store/rootReducer.ts","store/rootSaga.ts","store/index.ts","store/configureStore.ts","index.tsx"],"names":["initialState","isOpen","modalSlice","createSlice","name","reducers","setIsOpen","state","action","payload","reset","actions","Button","styled","button","buttonType","disabled","sizeClass","size","PrimaryIcon","FontAwesomeIcon","onClick","children","icon","faChevronRight","DIFFICULTY","random","label","value","easy","medium","hard","QUIZ_MESSAGE","empty","correct","incorrect","Container","p","Timer","prefix","time","min","Math","floor","toString","slice","sec","div","Row","Item","item","date","difficulty","answers","Table","Chart","historyList","useState","tableList","setTableList","labels","datasets","data","borderColor","backgroundColor","setData","useEffect","tempData","tempLabels","forEach","setDate","NumberOfCorrectAnswer","questions","splitSetDate","split","year","month","itemDate","replace","join","push","Number","length","toFixed","prev","id","map","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Head","h3","Body","Foot","EmptyMessage","History","dispatch","useDispatch","JSON","parse","window","localStorage","getItem","setHistoryList","removeItem","progress","elapsedTime","NumberOfIncorrectAnswer","quizSlice","setProgress","setElapsedTime","setDifficulty","setQuestions","setAnswer","setRestart","getQuizState","alignClass","align","InfoMessage","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","RadioButton","isChecked","handleChange","type","checked","onChange","Difficulty","selectedDifficulty","Title","h2","ButtonWrap","Intro","useSelector","request","fallbackData","config","useSWR","stringify","axios","status","statusText","headers","response","error","isValidating","mutate","useRequest","url","useMemo","process","Object","values","handleDifficulty","useCallback","results","Answers","React","memo","selectedValue","array","randomIndex","currentIndex","utils","correct_answer","incorrect_answers","Inner","ended","Subject","ResultInfo","ul","Quiz","step","setStep","selected","setSelected","selectedAnswer","setSelectedAnswer","setTime","timeRef","useRef","current","setInterval","clearInterval","key","saveData","mergedItems","concat","setItem","saveToLocalstorage","Date","toLocaleString","question","getModalState","GlobalStyle","createGlobalStyle","AppContainer","Modal","ReactModal","App","style","overlay","display","alignItems","justifyContent","onRequestClose","rootReducer","combineReducers","rootSaga","all","store","sagaMiddleware","createSagaMiddleware","middlewares","startKitConfigureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","devTools","run","configureStore","ReactDOM","render","StrictMode","document","getElementById","setAppElement"],"mappings":"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","file":"static/js/main.38be3259.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { IModalInitialState } from './types';\n\n/**\n * @description modal 상태관리\n * */\nconst initialState: IModalInitialState = {\n  isOpen: false,\n};\n\nexport const modalSlice = createSlice({\n  name: 'modal',\n  initialState,\n  reducers: {\n    setIsOpen: (state, action: PayloadAction<boolean>) => {\n      state.isOpen = action.payload;\n    },\n    // 초기화\n    reset: () => initialState,\n  },\n});\n\nexport const { setIsOpen, reset } = modalSlice.actions;\n\nexport default modalSlice.reducer;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Button = styled.button<{\n  buttonType: 'default' | 'primary';\n  size: 'default' | 'large' | 'middle' | 'small';\n  disabled: boolean;\n}>`\n  ${({ buttonType }) =>\n    buttonType === 'default'\n      ? tw`text-gray-500 border border-gray-200 bg-white hover:bg-gray-50`\n      : tw`font-bold text-white border-2 border-subColor bg-mainColor bg-opacity-80 hover:bg-opacity-100`}\n\n  ${({ disabled }) =>\n    disabled\n      ? tw`text-gray-300 bg-gray-100 border border-gray-200 hover:bg-gray-100 cursor-default`\n      : tw` cursor-pointer`}\n  \n  ${({ size, buttonType }) => {\n    let sizeClass;\n    switch (size) {\n      case 'large':\n        sizeClass = tw`w-full`;\n        break;\n      case 'middle':\n        sizeClass = tw`w-1/2`;\n        break;\n      case 'small':\n        sizeClass = tw`w-1/3`;\n        break;\n      default:\n        sizeClass = buttonType === 'default' ? tw`w-1/2` : tw`w-full`;\n        break;\n    }\n    return sizeClass;\n  }}\n  ${tw`relative h-10 text-xs sm:h-10 sm:text-sm rounded-lg border-solid transition ease-in`}\n`;\n\nexport const PrimaryIcon = styled(FontAwesomeIcon)`\n  ${tw`absolute top-1/2 right-4`}\n  transform: translateY(-50%);\n`;\n","import { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport React, { ReactElement } from 'react';\n\nimport { Button as StyledButton, PrimaryIcon } from './style';\nimport { IButtonProps } from './types';\n\nexport default function Button({\n  buttonType = 'default',\n  size = 'default',\n  disabled = false,\n  onClick,\n  children,\n}: IButtonProps): ReactElement {\n  return (\n    <StyledButton buttonType={buttonType} size={size} disabled={disabled} onClick={onClick}>\n      {children}\n      {buttonType === 'primary' && <PrimaryIcon icon={faChevronRight} />}\n    </StyledButton>\n  );\n}\n","import { IDifficulty } from './types';\n\nexport const DIFFICULTY: IDifficulty = {\n  random: {\n    label: '랜덤',\n    value: 'random',\n  },\n  easy: {\n    label: '쉬움',\n    value: 'easy',\n  },\n  medium: {\n    label: '보통',\n    value: 'medium',\n  },\n  hard: {\n    label: '어려움',\n    value: 'hard',\n  },\n};\n\nexport const QUIZ_MESSAGE = {\n  empty: '답을 선택해주세요 🧐',\n  correct: '정답이에요 🥳',\n  incorrect: '아쉬워요 😭',\n};\n","import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Container = styled.p`\n  ${tw`font-light text-sm italic`}\n`;\n","import React, { ReactElement } from 'react';\n\nimport { Container } from './style';\n\nexport default function Timer({ prefix, time }: { prefix?: string; time: number }): ReactElement {\n  const min =\n    Math.floor(time / 60) < 10\n      ? '0' +\n        Math.floor(time / 60)\n          .toString()\n          .slice(-2)\n      : Math.floor(time / 60);\n  const sec = time % 60 < 10 ? '0' + (time % 60).toString().slice(-2) : time % 60;\n  return (\n    <Container>\n      {prefix && <span>{prefix} </span>}\n      <span children={`${min}:${sec}`} />\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Container = styled.div`\n  ${tw`grid grid-cols-3 gap-6 mb-2 pb-2 border-b border-solid border-gray-200`}\n`;\n\nexport const Row = styled.div`\n  ${tw`flex items-center justify-between `}\n\n  > span:first-child {\n    ${tw` tracking-tighter`}\n  }\n  span,\n  span p {\n    ${tw`text-xs sm:text-sm font-normal not-italic`}\n  }\n`;\n","import React, { ReactElement } from 'react';\n\nimport Timer from '../../../../atoms/timer';\nimport { TTable } from '../types';\nimport { Container, Row } from './style';\n\nexport default function Item({ item }: { item: TTable }): ReactElement {\n  return (\n    <Container>\n      <Row>\n        <span>{item.date}</span>\n        <span>[{item.difficulty}]</span>\n      </Row>\n      <Row>\n        <span>소요 시간</span>\n        <span>\n          <Timer time={item.time} />\n        </span>\n      </Row>\n      <Row>\n        <span>정답 비율</span>\n        <span>{item.answers}%</span>\n      </Row>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Table = styled.div`\n  ${tw`overflow-y-auto my-4`}\n  max-height: 185px;\n`;\n","import { CategoryScale, Chart as ChartJS, LinearScale, LineElement, PointElement } from 'chart.js';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport { DIFFICULTY } from '../../../../constants';\nimport Item from './item';\nimport { Table } from './style';\nimport { IChart, TData, TTable } from './types';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement);\n\nexport default function Chart({ historyList }: IChart): ReactElement {\n  const [tableList, setTableList] = useState<TTable[]>([]);\n  const [data, setData] = useState<TData>({\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        borderColor: '#00c896',\n        backgroundColor: '#00c896',\n      },\n    ],\n  });\n\n  useEffect(() => {\n    const tempData: number[] = [];\n    const tempLabels: string[] = [];\n\n    historyList.forEach(item => {\n      const { setDate, difficulty, NumberOfCorrectAnswer, questions, time } = item;\n      const splitSetDate = setDate.split(' ');\n      const [year, month, date] = splitSetDate;\n      const itemDate = [year.replace('.', ''), month.replace('.', ''), date.replace('.', '')].join('-');\n      tempData.push(Number(((NumberOfCorrectAnswer / questions.length) * 100).toFixed(2)));\n      tempLabels.push(itemDate);\n      setTableList(prev => [\n        ...prev,\n        {\n          time,\n          id: `${setDate}${time}`,\n          date: itemDate,\n          difficulty: DIFFICULTY[difficulty].label,\n          answers: Number(((NumberOfCorrectAnswer / questions.length) * 100).toFixed(2)),\n        },\n      ]);\n    });\n\n    setData(prev => ({\n      ...prev,\n      labels: tempLabels,\n      datasets: [\n        {\n          ...prev.datasets[0],\n          data: tempData,\n        },\n      ],\n    }));\n  }, []);\n\n  return (\n    <div>\n      <Table>\n        {tableList.map(item => (\n          <Item key={item.id} item={item} />\n        ))}\n      </Table>\n      <Line data={data} />\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Container = styled.div`\n  ${tw`p-4`}\n`;\n\nexport const Head = styled.h3`\n  ${tw`font-bold text-xl text-gray-600 border-b border-dashed border-gray-400`}\n`;\n\nexport const Body = styled.div``;\n\nexport const Foot = styled.div`\n  ${tw`flex justify-center space-x-2 w-full`}\n`;\n\nexport const EmptyMessage = styled.p`\n  ${tw`py-20 text-xl text-center`}\n`;\n","import React, { ReactElement, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { setIsOpen } from '../../../store/modal';\nimport Button from '../../atoms/button';\nimport { ISaveData } from '../../organisms/quiz/types';\nimport Chart from './chart';\nimport { Body, Container, EmptyMessage, Foot, Head } from './style';\n\nexport default function History(): ReactElement {\n  const dispatch = useDispatch();\n  const [historyList, setHistoryList] = useState(\n    JSON.parse(window.localStorage.getItem('quiz') || '[]') as ISaveData[],\n  );\n  const onClose = () => dispatch(setIsOpen(false));\n  const onRemove = () => {\n    window.localStorage.removeItem('quiz');\n    setHistoryList([]);\n  };\n\n  return (\n    <Container>\n      <Head>퀴즈 기록</Head>\n      <Body>\n        {historyList.length ? (\n          <Chart historyList={historyList} />\n        ) : (\n          <EmptyMessage>기록이 존재하지 않습니다.</EmptyMessage>\n        )}\n      </Body>\n      <Foot>\n        {!!historyList.length && <Button size={'small'} children={'기록 전체 삭제'} onClick={onRemove} />}\n        <Button size={'small'} children={'닫기'} onClick={onClose} />\n      </Foot>\n    </Container>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { IQuizInitialState, TQuestion } from './types';\n\n/**\n * @description Quiz 초기 값\n * */\nconst initialState: IQuizInitialState = {\n  progress: false,\n  elapsedTime: 0, // 경과시간\n  difficulty: 'random', // 난이도\n  NumberOfCorrectAnswer: 0, // 정답 수\n  NumberOfIncorrectAnswer: 0, // 오답 수\n  questions: [], // API response 문항 리스트\n  answers: [],\n};\n\nexport const quizSlice = createSlice({\n  name: 'quiz',\n  initialState,\n  reducers: {\n    setProgress: (state, action: PayloadAction<boolean>) => {\n      state.progress = action.payload;\n    },\n    // 경과 시간 세팅\n    setElapsedTime: (state, action: PayloadAction<number>) => {\n      state.elapsedTime = action.payload;\n    },\n    // 난이도 세팅\n    setDifficulty: (state, action: PayloadAction<string>) => {\n      state.difficulty = action.payload;\n    },\n    // API response 문항 리스트 세팅\n    setQuestions: (state, action: PayloadAction<TQuestion[]>) => {\n      state.questions = action.payload;\n    },\n    // 정답 오답 세팅\n    setAnswer: (state, action: PayloadAction<boolean>) => {\n      if (action.payload) {\n        state.NumberOfCorrectAnswer = state.NumberOfCorrectAnswer + 1;\n      } else {\n        state.NumberOfIncorrectAnswer = state.NumberOfIncorrectAnswer + 1;\n      }\n      state.answers.push(action.payload);\n    },\n    setRestart: state => {\n      state.answers = initialState.answers;\n      state.NumberOfCorrectAnswer = initialState.NumberOfCorrectAnswer;\n      state.NumberOfIncorrectAnswer = initialState.NumberOfIncorrectAnswer;\n    },\n    // 초기화\n    reset: () => initialState,\n  },\n});\n\nexport const { setProgress, setElapsedTime, setDifficulty, setQuestions, setAnswer, setRestart, reset } =\n  quizSlice.actions;\n\nexport default quizSlice.reducer;\n","import { RootState } from '../types';\nimport { IQuizInitialState } from './types';\n\n/**\n * @description 스토어에 저장된 Quiz 를 꺼낸다.\n * */\nexport const getQuizState = (state: RootState): IQuizInitialState => state.quizSlice;\n","import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Container = styled.p<{ align: 'left' | 'center' | 'right' }>`\n  ${({ align }) => {\n    let alignClass;\n    switch (align) {\n      case 'center':\n        alignClass = tw`text-center`;\n        break;\n      case 'right':\n        alignClass = tw`text-right`;\n        break;\n      default:\n        alignClass = tw``;\n        break;\n    }\n    return alignClass;\n  }}\n\n  ${tw`mb-8 text-gray-500`}\n\n  span {\n    ${tw`font-bold text-mainColor`}\n  }\n`;\n","import DOMPurify from 'dompurify';\nimport React, { ReactElement } from 'react';\n\nimport { Container } from './style';\n\nexport default function InfoMessage({\n  align = 'left',\n  children,\n}: {\n  align?: 'left' | 'center' | 'right';\n  children: string;\n}): ReactElement {\n  return <Container align={align} dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(children) }} />;\n}\n","import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Container = styled.label`\n  ${tw`flex-auto text-center`}\n  font-size:0;\n  line-height: 0;\n\n  span {\n    ${tw`block w-auto sm:w-16 px-2 py-2 text-gray-400 text-sm rounded-lg border border-solid border-gray-200 bg-white cursor-pointer`}\n  }\n\n  input[type='radio'] {\n    ${tw`absolute w-0 h-0 opacity-0`}\n  }\n\n  input[type='radio']:checked ~ span {\n    ${tw`font-semibold text-white border border-solid  border-subColor bg-subColor`}\n  }\n`;\n","import DOMPurify from 'dompurify';\nimport React, { ReactElement } from 'react';\n\nimport { Container } from './style';\nimport { IRadioButtonProps } from './types';\n\nexport default function RadioButton({ label, value, isChecked, handleChange }: IRadioButtonProps): ReactElement {\n  const onChange = () => handleChange(value);\n  return (\n    <Container>\n      <input type=\"radio\" value={value} checked={isChecked} onChange={onChange} />\n      <span dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(label) }} />\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Container = styled.div`\n  ${tw`flex items-center justify-center w-full my-4 space-x-2`}\n`;\n","import React, { ReactElement } from 'react';\n\nimport RadioButton from '../../atoms/radioButton';\nimport { Container } from './style';\nimport { IDifficultyProps } from './types';\n\nexport default function Difficulty({ selectedDifficulty, difficulty, handleChange }: IDifficultyProps): ReactElement {\n  return (\n    <Container>\n      {difficulty.map(({ label, value }) => (\n        <RadioButton\n          key={value}\n          label={label}\n          value={value}\n          isChecked={selectedDifficulty === value}\n          handleChange={handleChange}\n        />\n      ))}\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Container = styled.div`\n  ${tw`flex flex-col items-center w-10/12 p-4 sm:w-96 sm:p-20 border-2 border-solid border-subColor rounded-2xl bg-white`}\n`;\n\nexport const Title = styled.h2`\n  ${tw`text-xl sm:text-3xl text-center sm:leading-10 tracking-tighter`}\n  > span {\n    ${tw`block font-bold text-2xl sm:text-4xl text-subColor tracking-wider`}\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  ${tw`flex space-x-2 w-full`}\n`;\n","import React, { ReactElement, useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { DIFFICULTY } from '../../../constants';\nimport useRequest from '../../../hooks/useRequest';\nimport { setIsOpen } from '../../../store/modal';\nimport { setDifficulty, setProgress, setQuestions } from '../../../store/quiz';\nimport { getQuizState } from '../../../store/quiz/selectors';\nimport { TQuestion } from '../../../store/quiz/types';\nimport Button from '../../atoms/button';\nimport InfoMessage from '../../atoms/infoMessage';\nimport Difficulty from '../../molecules/difficulty';\nimport { ButtonWrap, Container, Title } from './style';\n\nexport default function Intro(): ReactElement {\n  const dispatch = useDispatch();\n  const { difficulty: selectedDifficulty } = useSelector(getQuizState);\n\n  const API = useMemo(() => {\n    return selectedDifficulty === 'random'\n      ? process.env.REACT_APP_API\n      : `${process.env.REACT_APP_API as string}&difficulty=${selectedDifficulty}`;\n  }, [selectedDifficulty]);\n\n  const { data } = useRequest<{ response_code: number; results: TQuestion[] }>({\n    url: API,\n  });\n\n  const difficulty = Object.values(DIFFICULTY);\n  const handleDifficulty = useCallback((value: string) => {\n    dispatch(setDifficulty(value));\n  }, []);\n\n  const handlePlayQuiz = () => dispatch(setProgress(true));\n  const onClickModal = () => dispatch(setIsOpen(true));\n\n  useEffect(() => {\n    if (data) dispatch(setQuestions(data.results));\n  }, [data]);\n\n  return (\n    <Container>\n      <Title>\n        재밌고 신나는 퀴즈 타임!\n        <span>퀴즈를 풀어보세요!</span>\n      </Title>\n      <Difficulty selectedDifficulty={selectedDifficulty} difficulty={difficulty} handleChange={handleDifficulty} />\n      <InfoMessage children={`<span>${DIFFICULTY[selectedDifficulty].label}</span> 난이도를 선택하셨습니다`} />\n      {/*\n        Todo : onClick 시에 데이터 패치를해서 화면 전환 시키자.\n        - 현재는 로딩시 불러오는데 화면이 보이자마자 버튼을 누르면 없는데이터라 에러뜸\n        - 그래서 일단 임시로 disabled={!data} 와 같이 해둠..\n        - 이렇게 해두니까 일단은 괜찮은데 난이도 선택시 UI 스타일이 변하는게 조금 ... 불편..\n        - 그래서 핸들러에 데이터 패치를 해두자!\n      */}\n      <ButtonWrap>\n        <Button\n          onClick={handlePlayQuiz}\n          buttonType={'primary'}\n          children={!data ? '로딩중...' : '퀴즈 풀기'}\n          disabled={!data}\n        />\n        <Button size={'small'} onClick={onClickModal} children={'기록보기'} />\n      </ButtonWrap>\n    </Container>\n  );\n}\n","import axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport useSWR, { SWRConfiguration, SWRResponse } from 'swr';\n\nexport type GetRequest = AxiosRequestConfig | null;\n\ninterface Return<Data, Error>\n  extends Pick<SWRResponse<AxiosResponse<Data>, AxiosError<Error>>, 'isValidating' | 'error' | 'mutate'> {\n  data: Data | undefined;\n  response: AxiosResponse<Data> | undefined;\n}\n\nexport interface Config<Data = unknown, Error = unknown>\n  extends Omit<SWRConfiguration<AxiosResponse<Data>, AxiosError<Error>>, 'fallbackData'> {\n  fallbackData?: Data;\n}\n\nexport default function useRequest<Data = unknown, Error = unknown>(\n  request: GetRequest,\n  { fallbackData, ...config }: Config<Data, Error> = {},\n): Return<Data, Error> {\n  const {\n    data: response,\n    error,\n    isValidating,\n    mutate,\n  } = useSWR<AxiosResponse<Data>, AxiosError<Error>>(\n    request && JSON.stringify(request),\n    /**\n     * NOTE: Typescript thinks `request` can be `null` here, but the fetcher\n     * function is actually only called by `useSWR` when it isn't.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    () => axios.request<Data>(request!),\n    {\n      ...config,\n      fallbackData: fallbackData && {\n        status: 200,\n        statusText: 'InitialData',\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        config: request!,\n        headers: {},\n        data: fallbackData,\n      },\n    },\n  );\n\n  return {\n    data: response && response.data,\n    response,\n    error,\n    isValidating,\n    mutate,\n  };\n}\n","import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Container = styled.div`\n  ${tw`mb-4`}\n\n  ul {\n    ${tw`grid grid-cols-2 gap-2 `}\n    li {\n      ${tw``}\n    }\n  }\n\n  label {\n    ${tw`flex flex-col h-full`}\n    span {\n      ${tw`flex justify-center items-center w-auto h-full`}\n    }\n  }\n`;\n","import React, { ReactElement, useMemo } from 'react';\n\nimport * as utils from '../../../utils';\nimport RadioButton from '../../atoms/radioButton';\nimport { Container } from './style';\nimport { IAnswerProps } from './types';\n\nconst Answers = React.memo(function Answers({ questions, handleChange, selectedValue }: IAnswerProps): ReactElement {\n  const answers = useMemo(() => utils.shuffle([questions.correct_answer, ...questions.incorrect_answers]), [questions]);\n\n  return (\n    <Container>\n      <ul>\n        {answers.map(item => (\n          <li key={item}>\n            <RadioButton label={item} value={item} isChecked={selectedValue === item} handleChange={handleChange} />\n          </li>\n        ))}\n      </ul>\n    </Container>\n  );\n});\n\nexport default Answers;\n","import { ISaveData } from '../component/organisms/quiz/types';\n\n/**\n * @description Fisher-Yates 피셔-예이츠 셔플\n * */\nexport function shuffle(array: string[]): string[] {\n  let currentIndex = array.length,\n    randomIndex;\n\n  while (currentIndex != 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\n/**\n * @description LocalStorage - 배열형태의 JSON data 를 저장한다.\n * @param {string} key 스토리지에 저장되는 key\n * @param {ISaveData[]} saveData 스토리지에 저장되는 데이터 ISaveData[]\n * @return void\n * */\nexport function saveToLocalstorage(key: string, saveData: ISaveData[]): void {\n  if (window.localStorage.getItem(key) !== null) {\n    const getItem = JSON.parse(window.localStorage.getItem(key) || '[]') as ISaveData[];\n    const mergedItems = getItem.concat(saveData);\n    localStorage.setItem(key, JSON.stringify(mergedItems));\n  } else {\n    window.localStorage.setItem(key, JSON.stringify([...saveData]));\n  }\n}\n","import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Container = styled.div`\n  ${tw`flex flex-col w-10/12 sm:w-120 p-4 sm:p-8 border-2 border-solid border-mainColor rounded-2xl bg-subColor bg-opacity-20`}\n`;\n\nexport const Title = styled.h2`\n  ${tw`flex justify-between items-center`}\n  > span:first-child {\n    ${tw`font-bold text-3xl tracking-tighter italic`}\n    span {\n      ${tw`font-light`}\n    }\n  }\n  > span:last-child {\n    ${tw`text-sm text-mainColor text-opacity-80`}\n  }\n`;\n\nexport const Inner = styled.div<{ ended?: boolean }>`\n  ${tw`overflow-hidden relative flex flex-col p-4 sm:p-8 rounded-2xl bg-white`}\n\n  &::before {\n    ${tw`absolute -top-2 font-black text-8xl text-subColor text-opacity-20 z-0`}\n    ${({ ended }) => (ended ? tw`-right-2` : tw`-left-2`)}\n    ${({ ended }) => (ended ? `content: '🎉'; transform: scaleX(-1)` : `content: 'Q'`)}\n  }\n`;\n\nexport const Subject = styled.p`\n  ${tw`relative mb-4 pb-3 font-bold sm:text-xl text-gray-600 border-b border-dashed border-gray-400 sm:leading-6`}\n`;\n\nexport const ResultInfo = styled.ul`\n  ${tw`mb-4 px-4`}\n  li {\n    ${tw`flex justify-between items-center `}\n    & + li {\n      ${tw`sm:mt-2`}\n    }\n    span,\n    p {\n      ${tw`text-gray-400 text-sm sm:font-normal font-normal not-italic`}\n    }\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  ${tw`flex space-x-2`}\n`;\n","import DOMPurify from 'dompurify';\nimport React, { ReactElement, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { DIFFICULTY, QUIZ_MESSAGE } from '../../../constants';\nimport { setIsOpen } from '../../../store/modal';\nimport { reset, setAnswer, setProgress, setRestart } from '../../../store/quiz';\nimport { getQuizState } from '../../../store/quiz/selectors';\nimport { saveToLocalstorage } from '../../../utils';\nimport Button from '../../atoms/button';\nimport InfoMessage from '../../atoms/infoMessage';\nimport Timer from '../../atoms/timer';\nimport Answers from '../../molecules/answer';\nimport { ButtonWrap, Container, Inner, ResultInfo, Subject, Title } from './style';\n\nexport default function Quiz(): ReactElement {\n  const dispatch = useDispatch();\n  const { questions, difficulty, NumberOfCorrectAnswer, NumberOfIncorrectAnswer } = useSelector(getQuizState);\n\n  const [step, setStep] = useState(0);\n  const [selected, setSelected] = useState(true);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [time, setTime] = useState(0);\n  const timeRef = useRef(time);\n\n  const handleSelectAnswer = (value: string) => {\n    setSelectedAnswer(value);\n    setSelected(false);\n  };\n\n  // 다음 문제 - 초기화 처리 | 정답 결과 리덕스에 저장\n  const onClickNext = () => {\n    setStep(prev => prev + 1);\n    setSelected(true);\n    setSelectedAnswer('');\n    dispatch(setAnswer(questions[step].correct_answer === selectedAnswer));\n  };\n\n  // 처음으로 - 초기화 처리\n  const onClickHome = () => {\n    dispatch(setProgress(false));\n    dispatch(reset());\n  };\n\n  // 다시 풀기 - step,time,store 초기화\n  const onClickRestart = () => {\n    setStep(0);\n    setTime(0);\n    dispatch(setRestart());\n  };\n\n  const onClickModal = () => dispatch(setIsOpen(true));\n\n  useEffect(() => {\n    timeRef.current = setInterval(() => setTime(time + 1), 1000) as unknown as number;\n    return () => clearInterval(timeRef.current);\n  }, [time]);\n\n  // 퀴즈 종료 - 타이머 종료 및 저장 | 기록 저장\n  useEffect(() => {\n    if (!questions[step]) {\n      clearInterval(timeRef.current);\n      const setDate = new Date().toLocaleString();\n      const saveData = [{ setDate, questions, difficulty, NumberOfCorrectAnswer, NumberOfIncorrectAnswer, time }];\n      saveToLocalstorage('quiz', saveData);\n    }\n  }, [step]);\n\n  return (\n    <Container>\n      {questions[step] ? (\n        <>\n          <Timer time={time} prefix={'[진행 시간]'} />\n          <Title>\n            <span>\n              <span>STEP{step + 1}.</span> QUIZ\n            </span>\n            <span>[{DIFFICULTY[questions[step].difficulty].label}]</span>\n          </Title>\n          <Inner>\n            <Subject dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(questions[step].question) }} />\n            <Answers questions={questions[step]} selectedValue={selectedAnswer} handleChange={handleSelectAnswer} />\n            <InfoMessage\n              align={'center'}\n              children={\n                QUIZ_MESSAGE[\n                  selectedAnswer === ''\n                    ? 'empty'\n                    : questions[step].correct_answer === selectedAnswer\n                    ? 'correct'\n                    : 'incorrect'\n                ]\n              }\n            />\n            <Button buttonType={'primary'} disabled={selected} onClick={onClickNext}>\n              다음 문제\n            </Button>\n          </Inner>\n        </>\n      ) : (\n        <>\n          <Inner ended={true}>\n            <Subject children={'모든 퀴즈 종료! 수고하셨습니다 🥳'} />\n            <ResultInfo>\n              <li>\n                <span>난이도</span>\n                <span>{DIFFICULTY[difficulty].label}</span>\n              </li>\n              <li>\n                <span>소요 시간</span>\n                <span>\n                  <Timer time={time} />\n                </span>\n              </li>\n              <li>\n                <span>정답 개수</span>\n                <span>{NumberOfCorrectAnswer}</span>\n              </li>\n              <li>\n                <span>오답 수</span>\n                <span>{NumberOfIncorrectAnswer}</span>\n              </li>\n              <li>\n                <span>정답 비율</span>\n                <span>{((NumberOfCorrectAnswer / questions.length) * 100).toFixed(2)}%</span>\n              </li>\n            </ResultInfo>\n            <ButtonWrap>\n              <Button size={'small'} onClick={onClickHome} children={'처음으로'} />\n              <Button size={'small'} onClick={onClickModal} children={'기록보기'} />\n              <Button buttonType={'primary'} size={'small'} onClick={onClickRestart} children={'다시 풀기'} />\n            </ButtonWrap>\n          </Inner>\n        </>\n      )}\n    </Container>\n  );\n}\n","import { RootState } from '../types';\nimport { IModalInitialState } from './types';\n\n/**\n * @description 스토어에 저장된 modal\n * */\nexport const getModalState = (state: RootState): IModalInitialState => state.modalSlice;\n","import ReactModal from 'react-modal';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\nimport tw from 'twin.macro';\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@200;300;400;500;600;700&display=swap');\n  :lang(ko){\n    font-family: 'IBM Plex Sans KR', sans-serif;\n  }\n  ${reset}\n\n  * {\n    ${tw`break-words antialiased`}\n  }\n\n  html, body {\n    ${tw`bg-backgroundColor h-screen`}\n  }\n  #root {\n   ${tw`h-full`} \n  }\n`;\n\nexport const AppContainer = styled.div`\n  ${tw`flex justify-center items-center h-full`}\n`;\n\nexport const Modal = styled(ReactModal)`\n  ${tw`w-11/12 sm:w-2/3 min-h-1/4 rounded-xl shadow bg-white`}\n`;\n","import React, { ReactElement } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport History from './component/molecules/history';\nimport Intro from './component/organisms/intro';\nimport Quiz from './component/organisms/quiz';\nimport { setIsOpen } from './store/modal';\nimport { getModalState } from './store/modal/selector';\nimport { getQuizState } from './store/quiz/selectors';\nimport { AppContainer, Modal } from './style';\n\nexport default function App(): ReactElement {\n  const dispatch = useDispatch();\n  const { progress } = useSelector(getQuizState);\n  const { isOpen } = useSelector(getModalState);\n\n  const onRequestClose = () => dispatch(setIsOpen(false));\n\n  return (\n    <AppContainer>\n      {progress ? <Quiz /> : <Intro />}\n      <Modal\n        style={{\n          overlay: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: 'rgba(0, 0, 0, 0.3)',\n          },\n        }}\n        isOpen={isOpen}\n        onRequestClose={onRequestClose}\n        children={<History />}\n      />\n    </AppContainer>\n  );\n}\n","import { combineReducers } from 'redux';\n\nimport modalSlice from './modal';\nimport quizSlice from './quiz';\n\nconst rootReducer = combineReducers({\n  quizSlice,\n  modalSlice,\n});\n\nexport default rootReducer;\n","import { all } from 'redux-saga/effects';\n\nfunction* rootSaga(): Generator {\n  yield all([]);\n}\n\nexport default rootSaga;\n","import configureStore from './configureStore';\n\nconst store = configureStore();\n\nexport default store;\n","import { configureStore as startKitConfigureStore, EnhancedStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst configureStore = (): EnhancedStore => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const middlewares = [sagaMiddleware];\n\n  const store = startKitConfigureStore({\n    reducer: rootReducer,\n    middleware: getDefaultMiddleware => getDefaultMiddleware({ serializableCheck: false }).concat(middlewares),\n    devTools: process.env.NODE_ENV !== 'production',\n  });\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './store';\nimport { GlobalStyle } from './style';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nModal.setAppElement('#root');\n"],"sourceRoot":""}